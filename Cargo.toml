[package]
name = "camigo"
version = "0.0.1"
# TODO Could this be 2018 edition?
edition = "2021"

description = "Cache-friendly comparison, binary & sequential search."
categories = ["algorithms", "caching", "data-structures", "no-std", "text-processing"]

authors = ["Peter Kehl <peter.kehl@gmail.com>"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/peter-kehl/camigo"

# TODO MSRV

[features]
# Keep features here sorted alphabetically
alloc = []
std = ["alloc"]
deref_pure_trait = ["unsafe", "nightly"]
hint_assert_unchecked = ["unsafe"]
nightly = []

rnd_frequent = [] # Whether to use "fastrand/rand/getrandom" also as a source of a very frequent randomnes.

# real_blackbox = [] #TODO?
unsafe = ["unsafe_from_rust_source"]
unsafe_from_rust_source = []

#default = [] 
#default = ["hint_assert_unchecked", "hint_assert_unchecked", "deref_pure_trait"]
#default = ["fastrand"]
#default = ["alloc", "unsafe_from_rust_source", "deref_pure_trait"]

[dev.dependencies]

fastrand = { version = "2.0.2", optional = true}

# If using "rand" but without feature "rnd_frequent", rand serves only for some of the randomness.
# (But, ultimately, the "frequent" randomness will depend on that "unfrequent" randomness
# indirectly, anyway.)
# rand = { version = "0.8.5", optional = true }

[dev-dependencies]
# @TODO real_blackbox is on NIGHTLY only - do this depending on rustc channel?
# criterion = { version = "0.5.1", features=['real_blackbox'] }
criterion = { version = "0.5.1" }

[[bench]]
name = "with_criterion"
harness = false

[lints.rust]
warnings = "allow"
